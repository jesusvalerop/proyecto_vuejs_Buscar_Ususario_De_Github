{"remainingRequest":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\src\\components\\GitHub.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\src\\components\\GitHub.vue","mtime":1644423883963},{"path":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644254906070},{"path":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\node_modules\\babel-loader\\lib\\index.js","mtime":1644254907099},{"path":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644254906070},{"path":"E:\\ESTUDIOS\\FP DAW\\2º\\DWE Cliente\\Segundo Trimeste\\componentes-de-un-solo-archivo-en-vuejs-JVP2021\\node_modules\\vue-loader\\lib\\index.js","mtime":1644254910438}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCi8vIFRPRE86IEltcG9ydGFyIGNvbXBvbmVudGUgR2l0SHViUmVwb3MNCg0KaW1wb3J0IEdpdEh1YlJlcG9zIGZyb20gJy4vR2l0SHViUmVwb3MudnVlJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdHaXRIdWInLA0KICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgLy8gVE9ETzogSW1wb3J0YXIgY29tcG9uZW50ZSBHaXRIdWJSZXBvcw0KICAgICAgICBHaXRIdWJSZXBvcywNCiAgICB9LA0KICAgIGRhdGE6IGZ1bmN0aW9uKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgLy8gVE9ETzogY3JlYXIgdmFyaWFibGVzIGRlIGRhdG9zIHBhcmEgZWwgZnVuY2lvbmFtaWVudG8gZGVsIGNvbXBvbmVudGUNCiAgICAgICAgICAgIHVzZXI6ICcnLA0KICAgICAgICAgICAgdXNlckRhdGE6IHt9LA0KICAgICAgICAgICAgdXNlclZhbGlkOiBmYWxzZSwNCiAgICAgICAgICAgIGVycm9yVXNlcjogZmFsc2UsDQogICAgICAgICAgICBsaXN0UmVwb3M6IFtdLA0KICAgICAgICAgICAgZGVzSW5wdXQ6IGZhbHNlLA0KICAgICAgICAgICAgbW9zUmVwbzogZmFsc2UsDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgb2J0ZW5lclVzdWFyaW86IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgLy8gVE9ETzogRnVuY2nDs24gcGFyYSBvYnRlbmVyIGxvcyBkYXRvcyBkZSB1c3VhcmlvIGRlIGxhIEFQSSBkZSBHaXRIdWINCg0KICAgICAgICAgICAgLy8gVE9ETzogQcOxYWRpciBsw7NnaWNhIHBhcmEgcmVzZXRlYXIgbG9zIGNhbWJpb3MgZW4gZWwgaW50ZXJmYXo6IGRlc2FjdGl2YXIgY2FtcG8gZGUgZW52w61vLA0KICAgICAgICAgICAgLy8gcmVzZXRlYXIgbWVuc2FqZSBkZSBlcnJvciwgbW9zdHJhciBsaXN0YSBkZSByZXBvc2l0b3Jpb3MsLi4uDQoNCiAgICAgICAgICAgIGxldCBiYXNlNjQgPSByZXF1aXJlKCdiYXNlLTY0Jyk7DQoNCiAgICAgICAgICAgIHZhciB1c2VyQXV0aCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfVVNFUk5BTUUgfHwgInVzZXIiOw0KICAgICAgICAgICAgdmFyIHBhc3NBdXRoID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9VU0VSVE9LRU4gfHwgInBhc3MiOw0KDQogICAgICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7DQoNCiAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKCdBdXRob3JpemF0aW9uJywgJ0Jhc2ljICcgKyBiYXNlNjQuZW5jb2RlKHVzZXJBdXRoICsgIjoiICsgcGFzc0F1dGgpKTsNCg0KICAgICAgICAgICAgdGhpcy5kZXNJbnB1dCA9IHRydWU7DQogICAgICAgICAgICB0aGlzLm1vc1JlcG8gPSBmYWxzZTsNCg0KICAgICAgICAgICAgdmFyIHVybCA9ICdodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzLycrdGhpcy51c2VyOw0KDQogICAgICAgICAgICBmZXRjaCh1cmwsIHsNCiAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLA0KICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQ0KICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5tZXNzYWdlKTsNCiAgICAgICAgICAgICAgICBpZihkYXRhLm1lc3NhZ2UgIT0gJ05vdCBGb3VuZCcpew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJEYXRhID0gZGF0YTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VyVmFsaWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9yVXNlciA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJWYWxpZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9yVXNlciA9IHRydWU7DQogICAgICAgICAgICAgICAgfSAgDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLypheGlvcw0KICAgICAgICAgICAgICAgIC5nZXQodXJsLCANCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGF1dGg6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyQXV0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzQXV0aA0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlckRhdGEgPSByZXNwb25zZS5kYXRhOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJWYWxpZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JVc2VyID0gZmFsc2U7DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlclZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JVc2VyID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9KSovDQogICAgICAgICAgICANCiAgICAgICAgICAgIHRoaXMuZGVzSW5wdXQgPSBmYWxzZTsNCg0KICAgICAgICAgICAgLy8gT2J0ZW5lciBkYXRvcyBkZSBhdXRlbnRpY2FjacOzbiBkZSB1c3VhcmlvIHBhcmEgaGFjZXIgcGV0aWNpb25lcw0KICAgICAgICAgICAgLy8gYXV0ZW50aWNhZGFzIGEgbGEgQVBJIGRlIEdpdEh1Yg0KDQoNCiAgICAgICAgICAgIC8vIFRPRE86IHJlYWxpemFyIHBldGljacOzbiBmZXRjaCBwYXIgb2J0ZW5lciBsb3MgZGF0b3MgeSBtb3N0cmFyIGxhIGluZm9ybWFjacOzbiBlbiBsYSBww6FnaW5hDQogICAgICAgICAgICAvLyBFamVtcGxvIGRlIHBhc28gZGUgZGF0b3MgZGUgYXV0b3JpemFjacOzbiBjb24gZmV0Y2g6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQzODQyNzkzL2Jhc2ljLWF1dGhlbnRpY2F0aW9uLXdpdGgtZmV0Y2gNCg0KICAgICAgICB9LA0KICAgICAgICBvYnRlbmVyUmVwb3NpdG9yaW9zOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIC8vIFRPRE86IEZ1bmNpw7NuIHBhcmEgb2J0ZW5lciBsb3MgcmVwb3NpdG9yaW9zIGRlbCB1c3VhcmlvIGRlc2RlIGxhIEFQSSBkZSBHw610SHViDQogICAgICAgICAgICAvLyBMYSBVUkwgZGUgbG9zIHJlcG9zaXRvcmlvcyBkZSB1c3VhcmlvIHNlIHB1ZWRlIG9idGVuZXIgYSB0cmF2w6lzIGRlbCBjYW1wbyAncmVwb3NfdXJsJyBkZSBsb3MgZGF0b3MgZGVsIHVzdWFyaW8NCg0KICAgICAgICAgICAgLyp2YXIgdXNlckF1dGggPSBwcm9jZXNzLmVudi5WVUVfQVBQX1VTRVJOQU1FIHx8ICJ1c2VyIjsNCiAgICAgICAgICAgIHZhciBwYXNzQXV0aCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfVVNFUlRPS0VOIHx8ICJwYXNzIjsqLw0KDQogICAgICAgICAgICB2YXIgdXJsID0gJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvJyt0aGlzLnVzZXIrJy9yZXBvcyc7DQoNCiAgICAgICAgICAgIGZldGNoKHVybCwgew0KICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQ0KICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5saXN0UmVwb3MgPSBkYXRhOw0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdFJlcG9zKTsNCiAgICAgICAgICAgICAgICB0aGlzLm1vc1JlcG8gPSB0cnVlOw0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8qYXhpb3MNCiAgICAgICAgICAgICAgICAuZ2V0KHVybCx7DQogICAgICAgICAgICAgICAgICAgIGF1dGg6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyQXV0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzQXV0aA0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubGlzdFJlcG9zID0gcmVzcG9uc2UuZGF0YTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5saXN0UmVwb3MpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1vc1JlcG8gPSB0cnVlOw0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOw0KICAgICAgICAgICAgICAgIH0pKi8NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICAvLyBPYnRlbmVyIGRhdG9zIGRlIGF1dGVudGljYWNpw7NuIGRlIHVzdWFyaW8gcGFyYSBoYWNlciBwZXRpY2lvbmVzDQogICAgICAgICAgICAvLyBhdXRlbnRpY2FkYXMgYSBsYSBBUEkgZGUgR2l0SHViDQoNCg0KDQogICAgICAgICAgICAvLyBUT0RPOiByZWFsaXphciBwZXRpY2nDs24gZmV0Y2ggcGFyIG9idGVuZXIgbG9zIGRhdG9zIHkgbW9zdHJhciBsYSBpbmZvcm1hY2nDs24gZW4gbGEgcMOhZ2luYQ0KICAgICAgICAgICAgLy8gRWplbXBsbyBkZSBwYXNvIGRlIGRhdG9zIGRlIGF1dG9yaXphY2nDs24gY29uIGZldGNoOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80Mzg0Mjc5My9iYXNpYy1hdXRoZW50aWNhdGlvbi13aXRoLWZldGNoDQoNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["GitHub.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA","file":"GitHub.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <!-- TODO: Crear componente GitHub -->\r\n        <div class=\"container\">\r\n            <input type=\"text\" class=\"form-control mb-4\" v-model=\"user\" @keydown.enter=\"obtenerUsuario\" :disabled=\"desInput\">\r\n            <div v-if=\"userValid\">\r\n                <div class=\"row centrar\">\r\n                    <div class=\"col-4\">\r\n                        <div class=\"card\" >\r\n                            <img alt=\"Foto de perfil del usuario\" :src=\"userData.avatar_url\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title mb-3\">{{userData.login}}</h5>\r\n                                <button href=\"#\" class=\"btn btn-primary\" @click=\"obtenerRepositorios\">Repositorios</button>\r\n                                <a :href=\"userData.html_url\" class=\"enlace\" target=\"_blank\">Url de GitHub</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div v-if=\"mosRepo\" class=\"col-8\">\r\n                        <GitHubRepos :repolist=\"listRepos\"></GitHubRepos>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"errorUser\" class=\"alert alert-danger\">\r\n                El usuario que buscas en GitHub no existe\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// TODO: Importar componente GitHubRepos\r\n\r\nimport GitHubRepos from './GitHubRepos.vue';\r\n\r\nexport default {\r\n    name: 'GitHub',\r\n    components: {\r\n        // TODO: Importar componente GitHubRepos\r\n        GitHubRepos,\r\n    },\r\n    data: function() {\r\n        return {\r\n            // TODO: crear variables de datos para el funcionamiento del componente\r\n            user: '',\r\n            userData: {},\r\n            userValid: false,\r\n            errorUser: false,\r\n            listRepos: [],\r\n            desInput: false,\r\n            mosRepo: false,\r\n        }\r\n    },\r\n    methods: {\r\n        obtenerUsuario: function() {\r\n            // TODO: Función para obtener los datos de usuario de la API de GitHub\r\n\r\n            // TODO: Añadir lógica para resetear los cambios en el interfaz: desactivar campo de envío,\r\n            // resetear mensaje de error, mostrar lista de repositorios,...\r\n\r\n            let base64 = require('base-64');\r\n\r\n            var userAuth = process.env.VUE_APP_USERNAME || \"user\";\r\n            var passAuth = process.env.VUE_APP_USERTOKEN || \"pass\";\r\n\r\n            let headers = new Headers();\r\n\r\n            headers.append('Authorization', 'Basic ' + base64.encode(userAuth + \":\" + passAuth));\r\n\r\n            this.desInput = true;\r\n            this.mosRepo = false;\r\n\r\n            var url = 'https://api.github.com/users/'+this.user;\r\n\r\n            fetch(url, {\r\n                method: \"GET\",\r\n                headers: headers,\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.message);\r\n                if(data.message != 'Not Found'){\r\n                    this.userData = data;\r\n                    this.userValid = true;\r\n                    this.errorUser = false;\r\n                }else{\r\n                    this.userValid = false;\r\n                    this.errorUser = true;\r\n                }  \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n            /*axios\r\n                .get(url, \r\n                {\r\n                    auth: {\r\n                        username: userAuth,\r\n                        password: passAuth\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.userData = response.data;\r\n                    this.userValid = true;\r\n                    this.errorUser = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.userValid = false;\r\n                    this.errorUser = true;\r\n                })*/\r\n            \r\n            this.desInput = false;\r\n\r\n            // Obtener datos de autenticación de usuario para hacer peticiones\r\n            // autenticadas a la API de GitHub\r\n\r\n\r\n            // TODO: realizar petición fetch par obtener los datos y mostrar la información en la página\r\n            // Ejemplo de paso de datos de autorización con fetch: https://stackoverflow.com/questions/43842793/basic-authentication-with-fetch\r\n\r\n        },\r\n        obtenerRepositorios: function() {\r\n            // TODO: Función para obtener los repositorios del usuario desde la API de GítHub\r\n            // La URL de los repositorios de usuario se puede obtener a través del campo 'repos_url' de los datos del usuario\r\n\r\n            /*var userAuth = process.env.VUE_APP_USERNAME || \"user\";\r\n            var passAuth = process.env.VUE_APP_USERTOKEN || \"pass\";*/\r\n\r\n            var url = 'https://api.github.com/users/'+this.user+'/repos';\r\n\r\n            fetch(url, {\r\n                method: \"GET\",\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.listRepos = data;\r\n                console.log(this.listRepos);\r\n                this.mosRepo = true;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n            /*axios\r\n                .get(url,{\r\n                    auth: {\r\n                        username: userAuth,\r\n                        password: passAuth\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.listRepos = response.data;\r\n                    console.log(this.listRepos);\r\n                    this.mosRepo = true;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })*/\r\n            \r\n\r\n            // Obtener datos de autenticación de usuario para hacer peticiones\r\n            // autenticadas a la API de GitHub\r\n\r\n\r\n\r\n            // TODO: realizar petición fetch par obtener los datos y mostrar la información en la página\r\n            // Ejemplo de paso de datos de autorización con fetch: https://stackoverflow.com/questions/43842793/basic-authentication-with-fetch\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-control:focus{\r\n  border-color: blue;\r\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px #0000ff;\r\n}\r\n\r\n.centrar{\r\n    justify-content: center;\r\n     align-self: center;\r\n}\r\n\r\n.enlace{\r\n    text-decoration: none;\r\n    margin-left: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n</style>\r\n"]}]}